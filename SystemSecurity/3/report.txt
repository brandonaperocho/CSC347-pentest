To begin the audit, we first checked the /var/log/syslog and /var/log/auth.log.
We did some quick checks keyword checks to see if anything odd happened on the 
system. We used commands like "cat /var/log/syslog | grep shadow",
"cat /var/log/auth.log | grep add", and etc. to see any common things the attacker
may want to be accessing. From this audit, we did not find anything very suspicious.

After this, we went and checked netstat -anlp for any unwanted connections to the 
server,but from here, we did not see anything odd so we continued with the audit 
through the system.

We then checked all of the cron.* files in the /etc/ directory for any odd possible
programs scheduled. We see this program called backup that copies the /etc/passwd 
and /etc/shadow file into the home directory of sid. We found this strange so we 
flagged it and checked out why this is here. We later find out that joe, the admin 
made this backup program.

Continuing with our audit, we now check the .bash_history files in the home 
directories ofall users in the system. We first check arnold's .bash_history 
file. Traversing through the file, we find that arnold cp-ing the /etc/passwd 
and /etc/shadow file into the /tmp folder was awfully strange; especially 
since the /tmp folder allows all users to edit these files. We knowthis by 
doing "find / -perm -002 -type d -ls | more".From here, we have found out what 
the attacker is doing! The attacker seems to be trying to access the /etc/passwd 
and /etc/shadow files in the system to possibly compromise the accounts. Also
by scrolling down, we found that the attacker inputted "vim .bash_history",
obviously trying to hide what he/she is doing. Now we must now take preventative 
measures and remove the attacker from the system.

Prevention:
- Advise all users on the system to change their passwords before using the 
  system since the incident
	- Doing this helps prevent brute force password guesses IE John the Ripper
	- Also have users change passwords after some time period
	
- Make sure that next time, important files like these cannot be mv/cp to 
  world writable directories.
	- Prevents incidents like these to happen

- If attacker is ssh'ed to server, close off ssh port

- Monitor/limit data coming in and going out in case the attacker has some program 
  that sends data from the server to the attackers computer

- Restart server at specified time intervals
	- This can may mess up any programs the attacker has installed on the server

- Back up important UNIX commands that are useful in detecting attacker
	- ls, ps, grep, netstat, cat, etc...

- Encrypt important files like /etc/passwd and /etc/shadow





